# Pour un commentaire destiné aux développeurs on utilise le hash

type Restaurant {
    # Pour chaque propriété on defini son type et si la valeur est forcément présente avec le "!"
    id: Int!
    name: String!
    description: String!
    terrace: Boolean!
    manager: Manager!
    city: City!
    # En GraphQL on ne peut (ne doit) pas faire d'associations Many to Many
    restaurant_cooking_styles: [RestaurantCookingStyle]!
    created_at: String!
    updated_at: String
}

# Entité de liaison entre Restaurant et CookingStyle
type RestaurantCookingStyle {
    id: Int!
    cooking_style: CookingStyle!
    created_at: String!
    updated_at: String
}

input RestaurantCreateInput {
    name: String!
    description: String!
    terrace: Boolean!
    manager_id: Int!
    city_id: Int!
    cooking_style_ids: [Int]!
}

# Si on le souhaitre on peut ajouter des commentaires utilisateurs qui apparaitrons dans la documentation.
# C'est une bonne pratique de documenter les types et les inputs
# Pour un commentaire destiné aux utilisateurs on utilise les triples guillemets si l'on veut utiliser des sauts de ligne
"""
Format des données pour
la mise à jour d'un restaurant
"""
input RestaurantUpdateInput {
    name: String
    description: String
    terrace: Boolean
    manager_id: Int
    city_id: Int
    # et un seul guillommet pour un commentaire sur une seule ligne
    "Liste des styles qui écraseront les styles existants"
    cooking_style_ids: [Int]
}